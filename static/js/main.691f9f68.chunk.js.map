{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","memo","person","to","slug","cn","sex","name","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","getPeopleFromServer","fetch","then","res","json","peopleFromServer","getPersonByName","find","useEffect","peopleWithParents","map","mother","motherName","father","fatherName","length","born","died","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.691f9f68.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = memo(({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import {\n  FC, memo, useEffect, useState,\n} from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeoplePage: FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const { slug } = useParams();\n  const getPeopleFromServer = async () => {\n    setIsLoading(true);\n    try {\n      const peopleFromServer = await\n      fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n        .then(res => res.json());\n\n      setPeople(peopleFromServer);\n    } catch (e) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getPersonByName = (name: string | null) => (\n    people.find(person => person.name === name)\n  );\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  const peopleWithParents = people.map(person => {\n    return {\n      ...person,\n      mother: getPersonByName(person.motherName),\n      father: getPersonByName(person.fatherName),\n    };\n  });\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading ? <Loader /> : (\n          <>\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {people.length === 0 && !isError ? (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            ) : (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {peopleWithParents.map(person => (\n                    <tr\n                      key={person.slug}\n                      data-cy=\"person\"\n                      className={cn(\n                        { 'has-background-warning': person.slug === slug },\n                      )}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n                      <td>\n                        {person.mother\n                          ? <PersonLink person={person.mother} />\n                          : person.motherName || '-'}\n                      </td>\n                      <td>\n                        {person.father\n                          ? <PersonLink person={person.father} />\n                          : person.fatherName || '-'}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n});\n","import {\n  Navigate, NavLink, Outlet, Route, Routes,\n} from 'react-router-dom';\n// import { Loader } from './components/Loader';\n\nimport './App.scss';\nimport cn from 'classnames';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route\n            path=\"people\"\n            element={(\n              <>\n                <h1 className=\"title\">People Page</h1>\n                <Outlet />\n              </>\n            )}\n          >\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}